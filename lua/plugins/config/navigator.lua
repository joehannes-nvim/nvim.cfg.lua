-- [nfnl] Compiled from fnl/plugins/config/navigator.fnl by https://github.com/Olical/nfnl, do not edit.
return (require("navigator")).setup({default_mapping = true, icons = {code_action_icon = "\239\160\180", code_lens_action_icon = "\239\161\136", diagnostic_err = "\238\128\137", diagnostic_file = "\239\128\150", diagnostic_head = "\239\151\163", diagnostic_head_description = "\239\170\165", diagnostic_head_severity_1 = "\239\129\177", diagnostic_head_severity_2 = "\238\143\135", diagnostic_head_severity_3 = "\238\143\134", diagnostic_hint = "\239\175\130", diagnostic_info = "\239\132\169", diagnostic_virtual_text = "\239\161\169", diagnostic_warn = "\238\128\138", icons = true, match_kinds = {associated = "&", field = "\239\171\187", ["function"] = "\239\130\154 ", method = "\198\146 ", namespace = "\239\163\150 ", parameter = "\239\139\133  ", type = "\238\141\175 ", var = "\238\158\155 "}, treesitter_default = "\239\134\187", value_changed = "\239\173\142", value_definition = "\239\153\180"}, keymaps = {{func = "references()", key = "gr"}, {func = "references()", key = "<C-RightMouse>"}, {func = "signature_help()", key = "<M-k>", mode = "i"}, {func = "signature_help()", key = "<c-k>"}, {func = "hover({ popup_opts = { border = single, max_width = 80 }})", key = "K"}, {func = "document_symbol()", key = "g$."}, {func = "workspace_symbol()", key = "g$*"}, {func = "definition()", key = "gd"}, {func = "definition()", key = "<C-LeftMouse>"}, {func = "declaration({ border = 'rounded', max_width = 80 })", key = "gD"}, {func = "require('navigator.definition').definition_preview()", key = "gP"}, {func = "require('navigator.treesitter').buf_ts()", key = "gT"}, {func = "require('navigator.codeAction').code_action()", key = "ga", mode = "n"}, {func = "range_code_action()", key = "ga", mode = "v"}, {func = "require('navigator.codelens').run_action()", key = "gA", mode = "n"}, {func = "rename()", key = "gR"}, {func = "incoming_calls()", key = "gI"}, {func = "outgoing_calls()", key = "gO"}, {func = "implementation()", key = "gi"}, {func = "implementation()", key = "<M-LeftMouse>"}, {func = "type_definition()", key = "g:"}, {func = "require('navigator.diagnostics').show_line_diagnostics()", key = "gl."}, {func = "require('navigator.diagnostics').show_diagnostic()", key = "gl*"}, {func = "diagnostic.goto_next({ border = 'rounded', max_width = 80})", key = "]d"}, {func = "diagnostic.goto_prev({ border = 'rounded', max_width = 80})", key = "[d"}, {func = "require('navigator.treesitter').goto_next_usage()", key = "]r"}, {func = "require('navigator.treesitter').goto_previous_usage()", key = "[r"}, {func = "require('navigator.dochighlight').hi_symbol()", key = "g/"}, {func = "add_workspace_folder()", key = "<space>>p"}, {func = "remove_workspace_folder()", key = "<Space><p"}, {func = "formatting()", key = "<Space>rf", mode = "n"}, {func = "range_formatting()", key = "<Space>rf", mode = "v"}, {func = "require('navigator.rename').rename()", key = "<Space>rr"}, {func = "print(vim.inspect(vim.lsp.buf.list_workspace_folders()))", key = "<Space>pl"}}, lspinstall = true, width = 1})
