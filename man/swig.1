.TH swig
.PP
.RS
Generate bindings between C/C++ code and various high level languages such as JavaScript, Python, C#, and more.
It uses special .i or .swg files to generate the bindings (C/C++ with SWIG directives, then outputs a C/C++ file that contains all the wrapper code needed to build an extension module.
More information: \[la]http://www.swig.org\[ra]\&.
.RE
.RS
.IP \(bu 2
Generate a binding between C++ and Python:
.RE
.PP
\fB\fCswig \-c++ \-python \-o {{path/to/output_wrapper.cpp}} {{path/to/swig_file.i}}\fR
.RS
.IP \(bu 2
Generate a binding between C++ and Go:
.RE
.PP
\fB\fCswig \-go \-cgo \-intgosize 64 \-c++ {{path/to/swig_file.i}}\fR
.RS
.IP \(bu 2
Generate a binding between C and Java:
.RE
.PP
\fB\fCswig \-java {{path/to/swig_file.i}}\fR
.RS
.IP \(bu 2
Generate a binding between C and Ruby and prefix the Ruby module with {{foo::bar::}}:
.RE
.PP
\fB\fCswig \-ruby \-prefix "{{foo::bar::}}" {{path/to/swig_file.i}}\fR
