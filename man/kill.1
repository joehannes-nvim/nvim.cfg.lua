.TH kill
.PP
.RS
Sends a signal to a process, usually related to stopping the process.
All signals except for SIGKILL and SIGSTOP can be intercepted by the process to perform a clean exit.
More information: \[la]https://manned.org/kill\[ra]\&.
.RE
.RS
.IP \(bu 2
Terminate a program using the default SIGTERM (terminate) signal:
.RE
.PP
\fB\fCkill {{process_id}}\fR
.RS
.IP \(bu 2
List available signal names (to be used without the \fB\fCSIG\fR prefix):
.RE
.PP
\fB\fCkill \-l\fR
.RS
.IP \(bu 2
Terminate a background job:
.RE
.PP
\fB\fCkill %{{job_id}}\fR
.RS
.IP \(bu 2
Terminate a program using the SIGHUP (hang up) signal. Many daemons will reload instead of terminating:
.RE
.PP
\fB\fCkill \-{{1|HUP}} {{process_id}}\fR
.RS
.IP \(bu 2
Terminate a program using the SIGINT (interrupt) signal. This is typically initiated by the user pressing \fB\fCCtrl + C\fR:
.RE
.PP
\fB\fCkill \-{{2|INT}} {{process_id}}\fR
.RS
.IP \(bu 2
Signal the operating system to immediately terminate a program (which gets no chance to capture the signal):
.RE
.PP
\fB\fCkill \-{{9|KILL}} {{process_id}}\fR
.RS
.IP \(bu 2
Signal the operating system to pause a program until a SIGCONT ("continue") signal is received:
.RE
.PP
\fB\fCkill \-{{17|STOP}} {{process_id}}\fR
.RS
.IP \(bu 2
Send a \fB\fCSIGUSR1\fR signal to all processes with the given GID (group id):
.RE
.PP
\fB\fCkill \-{{SIGUSR1}} \-{{group_id}}\fR
