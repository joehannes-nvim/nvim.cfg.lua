.TH esbuild
.PP
.RS
JavaScript bundler and minifier built for speed.
More information: \[la]https://esbuild.github.io/\[ra]\&.
.RE
.RS
.IP \(bu 2
Bundle a JavaScript application and print to \fB\fCstdout\fR:
.RE
.PP
\fB\fCesbuild \-\-bundle {{path/to/file.js}}\fR
.RS
.IP \(bu 2
Bundle a JSX application from \fB\fCstdin\fR:
.RE
.PP
\fB\fCesbuild \-\-bundle \-\-outfile={{path/to/out.js}} < {{path/to/file.jsx}}\fR
.RS
.IP \(bu 2
Bundle and minify a JSX application with source maps in \fB\fCproduction\fR mode:
.RE
.PP
\fB\fCesbuild \-\-bundle \-\-define:{{process.env.NODE_ENV=\\"production\\"}} \-\-minify \-\-sourcemap {{path/to/file.js}}\fR
.RS
.IP \(bu 2
Bundle a JSX application for a comma\-separated list of browsers:
.RE
.PP
\fB\fCesbuild \-\-bundle \-\-minify \-\-sourcemap \-\-target={{chrome58,firefox57,safari11,edge16}} {{path/to/file.jsx}}\fR
.RS
.IP \(bu 2
Bundle a JavaScript application for a specific node version:
.RE
.PP
\fB\fCesbuild \-\-bundle \-\-platform={{node}} \-\-target={{node12}} {{path/to/file.js}}\fR
.RS
.IP \(bu 2
Bundle a JavaScript application enabling JSX syntax in \fB\fC\&.js\fR files:
.RE
.PP
\fB\fCesbuild \-\-bundle app.js \-\-loader:{{.js=jsx}} {{path/to/file.js}}\fR
.RS
.IP \(bu 2
Bundle and serve a JavaScript application on an HTTP server:
.RE
.PP
\fB\fCesbuild \-\-bundle \-\-serve={{port}} \-\-outfile={{index.js}} {{path/to/file.js}}\fR
.RS
.IP \(bu 2
Bundle a list of files to an output directory:
.RE
.PP
\fB\fCesbuild \-\-bundle \-\-outdir={{path/to/output_directory}} {{path/to/file1 path/to/file2 ...}}\fR
