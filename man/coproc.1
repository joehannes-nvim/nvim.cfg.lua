.TH coproc
.PP
.RS
Bash builtin for creating interactive asynchronous subshells.
More information: \[la]https://www.gnu.org/software/bash/manual/bash.html#Coprocesses\[ra]\&.
.RE
.RS
.IP \(bu 2
Run a subshell asynchronously:
.RE
.PP
\fB\fCcoproc { {{command1; command2; ...}}; }\fR
.RS
.IP \(bu 2
Create a coprocess with a specific name:
.RE
.PP
\fB\fCcoproc {{name}} { {{command1; command2; ...}}; }\fR
.RS
.IP \(bu 2
Write to a specific coprocess \fB\fCstdin\fR:
.RE
.PP
\fB\fCecho "{{input}}" >&"${{{name}}[1]}"\fR
.RS
.IP \(bu 2
Read from a specific coprocess \fB\fCstdout\fR:
.RE
.PP
\fB\fCread {{variable}} <&"${{{name}}[0]}"\fR
.RS
.IP \(bu 2
Create a coprocess which repeatedly reads \fB\fCstdin\fR and runs some commands on the input:
.RE
.PP
\fB\fCcoproc {{name}} { while read line; do {{command1; command2; ...}}; done }\fR
.RS
.IP \(bu 2
Create and use a coprocess running \fB\fCbc\fR:
.RE
.PP
\fB\fCcoproc BC { bc \-\-mathlib; }; echo "1/3" >&"${BC[1]}"; read output <&"${BC[0]}"; echo "$output"\fR
