.TH gum
.PP
.RS
A tool for making glamorous shell scripts.
More information: \[la]https://github.com/charmbracelet/gum\[ra]\&.
.RE
.RS
.IP \(bu 2
Interactively pick a specific option to print to \fB\fCstdout\fR:
.RE
.PP
\fB\fCgum choose "{{option_1}}" "{{option_2}}" "{{option_3}}"\fR
.RS
.IP \(bu 2
Open an interactive prompt for the user to input a string with a specific placeholder:
.RE
.PP
\fB\fCgum input \-\-placeholder "{{value}}"\fR
.RS
.IP \(bu 2
Open an interactive confirmation prompt and exit with either \fB\fC0\fR or \fB\fC1\fR:
.RE
.PP
\fB\fCgum confirm "{{Continue?}}" \-\-default=false \-\-affirmative "{{Yes}}" \-\-negative "{{No}}" {{&& echo "Yes selected" || echo "No selected"}}\fR
.RS
.IP \(bu 2
Show a spinner while a command is taking place with text alongside:
.RE
.PP
\fB\fCgum spin \-\-spinner {{dot|line|minidot|jump|pulse|points|globe|moon|monkey|meter|hamburger}} \-\-title "{{loading...}}" \-\- {{command}}\fR
.RS
.IP \(bu 2
Format text to include emojis:
.RE
.PP
\fB\fCgum format \-t {{emoji}} "{{:smile: :heart: hello}}"\fR
.RS
.IP \(bu 2
Interactively prompt for multi\-line text (CTRL + D to save) and write to \fB\fCdata.txt\fR:
.RE
.PP
\fB\fCgum write > {{data.txt}}\fR
