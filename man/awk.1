.TH awk
.PP
.RS
A versatile programming language for working on files.
More information: \[la]https://github.com/onetrueawk/awk\[ra]\&.
.RE
.RS
.IP \(bu 2
Print the fifth column (a.k.a. field) in a space\-separated file:
.RE
.PP
\fB\fCawk '{print $5}' {{path/to/file}}\fR
.RS
.IP \(bu 2
Print the second column of the lines containing "foo" in a space\-separated file:
.RE
.PP
\fB\fCawk '/{{foo}}/ {print $2}' {{path/to/file}}\fR
.RS
.IP \(bu 2
Print the last column of each line in a file, using a comma (instead of space) as a field separator:
.RE
.PP
\fB\fCawk \-F ',' '{print $NF}' {{path/to/file}}\fR
.RS
.IP \(bu 2
Sum the values in the first column of a file and print the total:
.RE
.PP
\fB\fCawk '{s+=$1} END {print s}' {{path/to/file}}\fR
.RS
.IP \(bu 2
Print every third line starting from the first line:
.RE
.PP
\fB\fCawk 'NR%3==1' {{path/to/file}}\fR
.RS
.IP \(bu 2
Print different values based on conditions:
.RE
.PP
\fB\fCawk '{if ($1 == "foo") print "Exact match foo"; else if ($1 ~ "bar") print "Partial match bar"; else print "Baz"}' {{path/to/file}}\fR
.RS
.IP \(bu 2
Print all lines where the 10th column value equals the specified value:
.RE
.PP
\fB\fCawk '($10 == value)'\fR
.RS
.IP \(bu 2
Print all the lines which the 10th column value is between a min and a max:
.RE
.PP
\fB\fCawk '($10 >= min_value && $10 <= max_value)'\fR
