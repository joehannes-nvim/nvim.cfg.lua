.TH crunch
.PP
.RS
Wordlist generator.
More information: \[la]https://sourceforge.net/projects/crunch-wordlist/\[ra]\&.
.RE
.RS
.IP \(bu 2
Output a list of words of length 1 to 3 with only lowercase characters:
.RE
.PP
\fB\fCcrunch {{1}} {{3}}\fR
.RS
.IP \(bu 2
Output a list of hexadecimal words of length 8:
.RE
.PP
\fB\fCcrunch {{8}} {{8}} {{0123456789abcdef}}\fR
.RS
.IP \(bu 2
Output a list of all permutations of abc (lengths are not processed):
.RE
.PP
\fB\fCcrunch {{1}} {{1}} \-p {{abc}}\fR
.RS
.IP \(bu 2
Output a list of all permutations of the given strings (lengths are not processed):
.RE
.PP
\fB\fCcrunch {{1}} {{1}} \-p {{abc}} {{def}} {{ghi}}\fR
.RS
.IP \(bu 2
Output a list of words generated according to the given pattern and a maximum number of duplicate letters:
.RE
.PP
\fB\fCcrunch {{5}} {{5}} {{abcde123}} \-t {{@@@12}} \-d 2@\fR
.RS
.IP \(bu 2
Write a list of words in chunk files of a given size, starting with the given string:
.RE
.PP
\fB\fCcrunch {{3}} {{5}} \-o {{START}} \-b {{10kb}} \-s {{abc}}\fR
.RS
.IP \(bu 2
Write a list of words stopping with the given string and inverting the wordlist:
.RE
.PP
\fB\fCcrunch {{1}} {{5}} \-o {{START}} \-e {{abcde}} \-i\fR
.RS
.IP \(bu 2
Write a list of words in compressed chunk files with a specified number of words:
.RE
.PP
\fB\fCcrunch {{1}} {{5}} \-o {{START}} \-c {{1000}} \-z {{gzip|bzip2|lzma|7z}}\fR
